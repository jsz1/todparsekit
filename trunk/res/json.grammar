/**
    A Grammar for JSON.
    
    Feed this to -[TDGrammarParserFactory parserForGrammar:assembler:] along with a reference
    to an assembler (a call back delegate), and it will return a TDParser object which can 
    parse strings conforming to this language/grammar.
    
    The provided assembler will receive method calls like:
    -workOnStartAssembly:
    -workOnObjectAssembly:
    -workOnPropertyAssembly:
    -workOnArrayAssembly:
    etc.
    
 */

start         = array | object;

object        = '{' objectContent '}';
objectContent = Empty | actualObject;
actualObject  = property commaProperty*;
commaProperty = ',' property;
property      = QuotedString ':' value;         // NOTE: property names are quoted in JSON

array         = '[' arrayContent ']';
arrayContent  = Empty | actualArray;
actualArray   = value commaValue*;
commaValue    = ',' value;

value         = null | true | false | array | object | Num | QuotedString;
null          = 'null';
true          = 'true';
false         = 'false';
